<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picError.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA8xJREFUeF7t
        m7+N1EAYR09IBEREkEEIMcTQAA1AAdAAFAANQAHQABTAFQAxxBBCBhERARJaPkt70tzes9f2fP8Gz5Oe
        dPeTd+z8aU46nU6n0+l0Op1OpyV2u92DvcPfTYpjI14Wv4pf9n/TM+nFsRGfiWc8FemZ9OLYgNfFX+IZ
        w9/XRHo2tTg24BvxkNciPZtaHJN7V/wrHjJsd0T6TVpxTO5HcYwPIv0mrTgm9pF4jIci/TalOCb1ivhd
        PMY3cXiWzkgnjkl9Ic7luUhnpBPHhN4Uf4tzGZ69IdJZqcQxoe/EpbwV6axU4pjM++Ja7ol0ZhpxTOQl
        8bO4lk/icAadnUIcE/lErOWxSGenEMckXhV/irX8EIez6B3h4pjEV6IWL0V6R7g4JvC2+EfUYjjrlkjv
        ChXHBJ6K2rwX6V2h4hjskBitSJcvcQz0LDNakS5f4hhomRmtSJUvcQzyMDNakSpf4hgkZUYr0uRLHAMc
        y4xWpMmXOAY4lRmtSJEvcXR2Tma0Ijxf4ujo3MxoRXi+xNHRJZnRitB8iaOTSzOjFaH5Ekcn12RGK8Ly
        JY4O1mRGK0LyJY7G1mZGOrN0LSH5EkdjazMjnVlag3u+xNFQjcxI55bW4J4vcTRUIzPSuaW1uOZLHI3U
        yox0dmktrvkSRyO1MiOdXaqBW77E0UDNzEjnl2rhki9xVFY7M9I7SrVwyZc4KqudGekdpZqY50scFbXI
        jPSeUk3M8yWOilpkRnpPqTam+RJHJa0yI72rVBvTfImjklaZkd5VaoFZvsRRQcvMSO8rtcIkX+JYqXVm
        pHeWWmGSL3Gs1Doz0jtLLVHPlzhWmCUzWqGeL3GsMFNmtEI1X+K40oyZ0Qq1fInjCmszY2uo5UscV6hx
        m7E1VPIljgvVus3YGir5EseFat5mbI3qfInjArVvM7ZGdb7EcYEWtxmPQd9R6k1VvsRxppa3GaegbymN
        YHW+xHGG1rcZp6DvKY1gdb7EcYYetxnHoO8pjWJVvsTxiF63GcegbyqNYlW+xPGInrcZCfqm0kgW50sc
        J/S+zUjQd5VGsjhf4jhhxG3GQ+i7SqNZlC9xHDHyNmNrzM6XOILRtxlbY3a+xBHMcJuxNWblSxwP/N8z
        oxWz8iWOB24hM1pxNF/iWLilzGjFZL7Ece/WMqMVk/kSx71bzIxWjOZLHMWtZkYrRvPlhWHvljOjFZgv
        Lwzi1jOjFZgvz/2zNyIzboUL+fLcP11/cez6iWPXTxy7fuLY9RPHrp84dv3Esesnjl0/cez6iWPXTxy7
        Xu5O/gGRTVrEnC+85gAAAABJRU5ErkJggg==
</value>
  </data>
</root>